import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

import seaborn as sns


#===================================================
"讀取的檔案想查詢編碼 encoding


"萬一想查編碼, 先把它轉成 txt 檔, 再這樣讀
 
 a = open('ff_1070131txt.txt')
a



##THIS

b = pd.read_csv('ff_1070131.csv', encoding='cp950')

b = pd.read_csv("/Users/mchh0814/Desktop/111.csv", encoding='cp950')
##哈哈哈! 它的斜線是倒過來的
## 字串結合讀檔

str1 = "/Users/mchh0814/Desktop/111.csv"

c = pd.read_csv(str1, encoding= 'cp950')

# Lazy coder 的
df = pd.read_csv(dir_path + '/ecommerce_data.csv')

#讀取 txt 用空白分隔
wc_97a3_10612a = pd.read_table('wc_97a3_10612a.txt',delim_whitespace=True) 


#Making(Extracting) Test data
d = b.head(30)

#===================================================

# TESTING, cp950 is for chinese traditional data

b = pd.read_csv('111.csv', encoding='cp950')



# Making a dataframe data
df4 = pd.DataFrame({'A':['A0','A1','A2'],
                    'B':[1,2,3]}, index=[1, 2, 3])

df5 = pd.DataFrame({'A': ['A0', 'A1', 'A2', 'A3'],
                   'B': ['B0', 'B1', 'B2', 'B3'],
                  'C': ['C0', 'C1', 'C2', 'C3'],
                     'D': [1, 2, 3, 4]},
                    index=[0, 1, 2, 3])

"""輸出檔案成 CSV"""

df5.to_csv('df5_out.csv',	sep=",")




#加上新的變數 EE_ADD 從 D 變數抓過來 *5

df5['EE_ADD'] = df5['D']*5


#加上新變數已項目 Label 區分的

df5['Weight'] = ['Fat','Skinny','Fat','Skinny']

#加上都是 1 的新變數
df5['N'] = np.ones(4)

#刪除列

del df5['EE_ADD']

# 抓取特定的 Data D 大於或等於 3

df5[df5.D >=3]

# 抓的項目如果是文字項目可以用 .isin


df5[df5['Weight'].isin(['Fat'])]

#按照文字項目分類, 併計算總 D 值


df5.groupby('Weight')
df5.groupby('Weight').sum()

# Group by year
df_by_year = df.groupby('release_year')

#Trying to merge DataFrames


import pandas as pd

import numpy as np

caller = pd.DataFrame({'Key':['K0','K1','K2','K3','K2','K3',],
                       'A':['A0','A1','A2','A3','A2','A3',]})

other = pd.DataFrame({'Key': ['K0', 'K1', 'K2'],
                       'B': ['B0', 'B1', 'B2']})


# 把 Caller 與 other 按照 index 合併, 不是 DataFrame
caller.join(other) #如果 Key沒重疊可以這樣用
#或把重複的 Key 做出變相的區隔
caller.join(other, lsuffix='_caller', rsuffix='_other')
#以 Key 為 index 進行合併
caller.set_index('Key').join(other.set_index('Key'))




frames = [caller, other] #成為一個 list 包含兩個 DataFrame
result = pd.concat(frames) #把兩個 DataFrame 依照 List 順序併在一起

#或直接
result = pd.concat([caller, other])




""" def 函式與 if 和 return 的應用, 大於小於"""
        
def print_age(age):
    if age <= 18:
        print('年齡太小')
        return
    print('年齡為' + str(age))



# sort the dataframe
sortdata = TESTff_1050108.sort_values(by=['Order_code'], ascending=[True])
# set the index to be this and don't drop
sortdata.set_index(keys=['Order_code'], drop=False,inplace=True)
# get a list of order_codes
Order_code=sortdata['Order_code'].unique().tolist()


"""根據變數項切割資料"""
# 創造 Data
TESTff_1050108 = pd.DataFrame({'Branch_ID': [1,3,1,1,1,3,3,1,1,2],
                               'HOSP_ID':['1531010279','0137170515','9431040031','1531010279','0137170515','9431040031','1531010279','0137170515','9431040031','9421040261'],
                               'ID':['A','B','C','D','E','F','G','H','I','J']
                               })

#加上 Order code
TESTff_1050108['Order_code'] = [25,21,20,12,33,33,21,25,25,25]
TESTff_1050108['N'] = np.ones(10)

TESTff_1050108.groupby('Order_code').sum()




# 按照 order_code 分組
Or12 = TESTff_1050108[TESTff_1050108.Order_code == 12] 
Or20 = TESTff_1050108[TESTff_1050108.Order_code == 20] 
Or21 = TESTff_1050108[TESTff_1050108.Order_code == 21]
Or33 = TESTff_1050108[TESTff_1050108.Order_code == 33]
Or25 = TESTff_1050108[TESTff_1050108.Order_code == 25]

#把該同一組的合體, 在這為 12 和 20

Or1220 = pd.concat([Or12, Or20])

"""終於試出來 or 用 | 代替, and 用 & 代替, 然後記得用刮號 ()"""
""" 可以直接用"""

Orag = TESTff_1050108[(TESTff_1050108.Order_code == 12) | (TESTff_1050108.Order_code == 20)] 

""" 函數顯示訊息"""

def print_msg():
    print('歡迎光臨!!')
    
""" 函數顯示 1 加到 10"""

def Sum_1_to_10():
    s = 0
    for i in range(1,11): #For 迴圈
        s +=i
        print('從 1 加到 10= ' + str(s))

   print_msg() 
    
   
   ### 擁有參數列的 for 函數 (開始值, 結束值)
   
def sum_to_n(start, stop):
    s = 0
    for i in range(start, stop+1):
        s += i
        print("從 n 加到 n = " + str(s))


# if 和 return 的應用, 大於小於
        
def print_age(age):
    if age <= 18:
        print('年齡太小')
        return #中止函數的執行, 後面就是類似 Else
    print('年齡為' + str(age))
   
    
    
 """ lambda 匿名函式"""
add = lambda x, y: x+y
add(1,2) #out: 3

"""傳入函式參數, def 與 lambda 一同使用"""
add = lambda x, y: x+y
add(1,2) #out: 3

def operate_on(x, y, func):
    return func(x,y)

r = operate_on(6,7, add)
   


#字串使用 與 運算


str1 = 'Hello'
print(str1[0])
print(str1[1])
print(str1[2])
print(str1[3])
print(str1[4])
#發現中文也通
str2 = '我想回家'
print(str2[0])
print(str2[1])

#互相判別
str1 == str2 #等於
str1 != str2 #不等於

#只取字串某部份

print(str2[0:2]) #2 就停, 只印 0, 1

#只取字串長度

len(str2)
